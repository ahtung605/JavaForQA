public class tests {
    public static void main(String[] args) {

        int[] test2 = new int[5];
        printArray(test2);

//        /**
//         * Задача 1. Как сделать, чтобы такой двойной цикл печатал таблицу из * размером 6х6, и чтобы между звездочками стояли пробелы
//         */
//        for (int i = 0; i < 6; i++) {
//            for (int j = 0; j < 6; j++) {
//                System.out.print("* ");
//            }
//            System.out.println();
//        }
//        System.out.println("----------");
//
//        /**
//         *Задача 2. А теперь давайте попробуем сделать так, чтобы правая половина этой таблицы состояла бы не из *, а из 0. Добавим для этого условие.
//         */
//        for (int i = 0; i < 6; i++) {
//            for (int j = 0; j < 6; j++) {
//                if (j < 3) {
//                    System.out.print("* ");
//                } else {
//                    System.out.print("0 ");
//                }
//            }
//            System.out.println();
//        }
//        System.out.println("----------");
//
//        /**
//         *Задача 3. Сделать так, чтобы по краям квадрата стояли 0, а внутри он был бы заполнен *.
//         */
//        for (int i = 0; i < 6; i++) {
//            for (int j = 0; j < 6; j++) {
//                if (i == 0 || i == 5 || j == 0 || j == 5) {
//                    System.out.print("0 ");
//                } else {
//                    System.out.print("* ");
//                }
//            }
//            System.out.println();
//        }
//        System.out.println("----------");
//
//        /**
//         *Задача 4. Сложный пример. Как заполнить таблицу в шахматном порядке?
//         */
//        for (int i = 0; i < 6; i++) {
//            for (int j = 0; j < 6; j++) {
//                if ((i + j) % 2 == 0) {
//                    System.out.print("* ");
//                } else {
//                    System.out.print("0 ");
//                }
//            }
//            System.out.println();
//        }
//        System.out.println("----------");
//
//        /**
//         *Задача 5. Сложный пример. Заполнить одну половину таблицы 0, а вторую *, при этом половину разделены диагональю.
//         */
//        for (int i = 0; i < 6; i++) {
//            for (int j = 0; j < 6; j++) {
//                if (i > j) {
//                    System.out.print("0 ");
//                } else if (i < j) {
//                    System.out.print("* ");
//                } else {
//                    System.out.print(" ");
//                }
//            }
//            System.out.println();
//        }
//        System.out.println("----------");

        /**
         * 4. Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
         * и с помощью цикла(-ов) заполнить его диагональные элементы единицами
         * (можно только одну из диагоналей, если обе сложно).
         * Определить элементы одной из диагоналей можно по следующему принципу:
         * индексы таких элементов равны, то есть [0][0], [1][1], [2][2], …, [n][n];
         */




    }
    /**
     *  метод, который принимает в качестве параметра одномерный массив и печатает его в консоль.
     *  По завершению печати ставится перенос строки.
     *  При необходимости можно вместо пробела поставить любой символ-разделитель.
     */
    public static void printArray(int[] inputArray) {
        for (int i = 0; i < inputArray.length; i++) {
            System.out.print(inputArray[i] + " ");
        }
        System.out.println();
    }
}